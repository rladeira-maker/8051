                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module iic
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CY
                                     12 	.globl _AC
                                     13 	.globl _F0
                                     14 	.globl _RS1
                                     15 	.globl _RS0
                                     16 	.globl _OV
                                     17 	.globl _F1
                                     18 	.globl _P
                                     19 	.globl _PS
                                     20 	.globl _PT1
                                     21 	.globl _PX1
                                     22 	.globl _PT0
                                     23 	.globl _PX0
                                     24 	.globl _RD
                                     25 	.globl _WR
                                     26 	.globl _T1
                                     27 	.globl _T0
                                     28 	.globl _INT1
                                     29 	.globl _INT0
                                     30 	.globl _TXD
                                     31 	.globl _RXD
                                     32 	.globl _P3_7
                                     33 	.globl _P3_6
                                     34 	.globl _P3_5
                                     35 	.globl _P3_4
                                     36 	.globl _P3_3
                                     37 	.globl _P3_2
                                     38 	.globl _P3_1
                                     39 	.globl _P3_0
                                     40 	.globl _EA
                                     41 	.globl _ES
                                     42 	.globl _ET1
                                     43 	.globl _EX1
                                     44 	.globl _ET0
                                     45 	.globl _EX0
                                     46 	.globl _P2_7
                                     47 	.globl _P2_6
                                     48 	.globl _P2_5
                                     49 	.globl _P2_4
                                     50 	.globl _P2_3
                                     51 	.globl _P2_2
                                     52 	.globl _P2_1
                                     53 	.globl _P2_0
                                     54 	.globl _SM0
                                     55 	.globl _SM1
                                     56 	.globl _SM2
                                     57 	.globl _REN
                                     58 	.globl _TB8
                                     59 	.globl _RB8
                                     60 	.globl _TI
                                     61 	.globl _RI
                                     62 	.globl _P1_7
                                     63 	.globl _P1_6
                                     64 	.globl _P1_5
                                     65 	.globl _P1_4
                                     66 	.globl _P1_3
                                     67 	.globl _P1_2
                                     68 	.globl _P1_1
                                     69 	.globl _P1_0
                                     70 	.globl _TF1
                                     71 	.globl _TR1
                                     72 	.globl _TF0
                                     73 	.globl _TR0
                                     74 	.globl _IE1
                                     75 	.globl _IT1
                                     76 	.globl _IE0
                                     77 	.globl _IT0
                                     78 	.globl _P0_7
                                     79 	.globl _P0_6
                                     80 	.globl _P0_5
                                     81 	.globl _P0_4
                                     82 	.globl _P0_3
                                     83 	.globl _P0_2
                                     84 	.globl _P0_1
                                     85 	.globl _P0_0
                                     86 	.globl _B
                                     87 	.globl _ACC
                                     88 	.globl _PSW
                                     89 	.globl _IP
                                     90 	.globl _P3
                                     91 	.globl _IE
                                     92 	.globl _P2
                                     93 	.globl _SBUF
                                     94 	.globl _SCON
                                     95 	.globl _P1
                                     96 	.globl _TH1
                                     97 	.globl _TH0
                                     98 	.globl _TL1
                                     99 	.globl _TL0
                                    100 	.globl _TMOD
                                    101 	.globl _TCON
                                    102 	.globl _PCON
                                    103 	.globl _DPH
                                    104 	.globl _DPL
                                    105 	.globl _SP
                                    106 	.globl _P0
                                    107 	.globl _iic_single_byte_write_PARM_3
                                    108 	.globl _iic_single_byte_write_PARM_2
                                    109 	.globl _iic_single_byte_read_PARM_3
                                    110 	.globl _iic_single_byte_read_PARM_2
                                    111 	.globl _iic_start
                                    112 	.globl _iic_stop
                                    113 	.globl _iic_ack
                                    114 	.globl _iic_nack
                                    115 	.globl _iic_read_ack
                                    116 	.globl _iic_send_byte
                                    117 	.globl _iic_read_byte
                                    118 	.globl _iic_single_byte_read
                                    119 	.globl _iic_single_byte_write
                                    120 ;--------------------------------------------------------
                                    121 ; special function registers
                                    122 ;--------------------------------------------------------
                                    123 	.area RSEG    (ABS,DATA)
      000000                        124 	.org 0x0000
                           000080   125 _P0	=	0x0080
                           000081   126 _SP	=	0x0081
                           000082   127 _DPL	=	0x0082
                           000083   128 _DPH	=	0x0083
                           000087   129 _PCON	=	0x0087
                           000088   130 _TCON	=	0x0088
                           000089   131 _TMOD	=	0x0089
                           00008A   132 _TL0	=	0x008a
                           00008B   133 _TL1	=	0x008b
                           00008C   134 _TH0	=	0x008c
                           00008D   135 _TH1	=	0x008d
                           000090   136 _P1	=	0x0090
                           000098   137 _SCON	=	0x0098
                           000099   138 _SBUF	=	0x0099
                           0000A0   139 _P2	=	0x00a0
                           0000A8   140 _IE	=	0x00a8
                           0000B0   141 _P3	=	0x00b0
                           0000B8   142 _IP	=	0x00b8
                           0000D0   143 _PSW	=	0x00d0
                           0000E0   144 _ACC	=	0x00e0
                           0000F0   145 _B	=	0x00f0
                                    146 ;--------------------------------------------------------
                                    147 ; special function bits
                                    148 ;--------------------------------------------------------
                                    149 	.area RSEG    (ABS,DATA)
      000000                        150 	.org 0x0000
                           000080   151 _P0_0	=	0x0080
                           000081   152 _P0_1	=	0x0081
                           000082   153 _P0_2	=	0x0082
                           000083   154 _P0_3	=	0x0083
                           000084   155 _P0_4	=	0x0084
                           000085   156 _P0_5	=	0x0085
                           000086   157 _P0_6	=	0x0086
                           000087   158 _P0_7	=	0x0087
                           000088   159 _IT0	=	0x0088
                           000089   160 _IE0	=	0x0089
                           00008A   161 _IT1	=	0x008a
                           00008B   162 _IE1	=	0x008b
                           00008C   163 _TR0	=	0x008c
                           00008D   164 _TF0	=	0x008d
                           00008E   165 _TR1	=	0x008e
                           00008F   166 _TF1	=	0x008f
                           000090   167 _P1_0	=	0x0090
                           000091   168 _P1_1	=	0x0091
                           000092   169 _P1_2	=	0x0092
                           000093   170 _P1_3	=	0x0093
                           000094   171 _P1_4	=	0x0094
                           000095   172 _P1_5	=	0x0095
                           000096   173 _P1_6	=	0x0096
                           000097   174 _P1_7	=	0x0097
                           000098   175 _RI	=	0x0098
                           000099   176 _TI	=	0x0099
                           00009A   177 _RB8	=	0x009a
                           00009B   178 _TB8	=	0x009b
                           00009C   179 _REN	=	0x009c
                           00009D   180 _SM2	=	0x009d
                           00009E   181 _SM1	=	0x009e
                           00009F   182 _SM0	=	0x009f
                           0000A0   183 _P2_0	=	0x00a0
                           0000A1   184 _P2_1	=	0x00a1
                           0000A2   185 _P2_2	=	0x00a2
                           0000A3   186 _P2_3	=	0x00a3
                           0000A4   187 _P2_4	=	0x00a4
                           0000A5   188 _P2_5	=	0x00a5
                           0000A6   189 _P2_6	=	0x00a6
                           0000A7   190 _P2_7	=	0x00a7
                           0000A8   191 _EX0	=	0x00a8
                           0000A9   192 _ET0	=	0x00a9
                           0000AA   193 _EX1	=	0x00aa
                           0000AB   194 _ET1	=	0x00ab
                           0000AC   195 _ES	=	0x00ac
                           0000AF   196 _EA	=	0x00af
                           0000B0   197 _P3_0	=	0x00b0
                           0000B1   198 _P3_1	=	0x00b1
                           0000B2   199 _P3_2	=	0x00b2
                           0000B3   200 _P3_3	=	0x00b3
                           0000B4   201 _P3_4	=	0x00b4
                           0000B5   202 _P3_5	=	0x00b5
                           0000B6   203 _P3_6	=	0x00b6
                           0000B7   204 _P3_7	=	0x00b7
                           0000B0   205 _RXD	=	0x00b0
                           0000B1   206 _TXD	=	0x00b1
                           0000B2   207 _INT0	=	0x00b2
                           0000B3   208 _INT1	=	0x00b3
                           0000B4   209 _T0	=	0x00b4
                           0000B5   210 _T1	=	0x00b5
                           0000B6   211 _WR	=	0x00b6
                           0000B7   212 _RD	=	0x00b7
                           0000B8   213 _PX0	=	0x00b8
                           0000B9   214 _PT0	=	0x00b9
                           0000BA   215 _PX1	=	0x00ba
                           0000BB   216 _PT1	=	0x00bb
                           0000BC   217 _PS	=	0x00bc
                           0000D0   218 _P	=	0x00d0
                           0000D1   219 _F1	=	0x00d1
                           0000D2   220 _OV	=	0x00d2
                           0000D3   221 _RS0	=	0x00d3
                           0000D4   222 _RS1	=	0x00d4
                           0000D5   223 _F0	=	0x00d5
                           0000D6   224 _AC	=	0x00d6
                           0000D7   225 _CY	=	0x00d7
                                    226 ;--------------------------------------------------------
                                    227 ; overlayable register banks
                                    228 ;--------------------------------------------------------
                                    229 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        230 	.ds 8
                                    231 ;--------------------------------------------------------
                                    232 ; internal ram data
                                    233 ;--------------------------------------------------------
                                    234 	.area DSEG    (DATA)
      000000                        235 _iic_single_byte_read_PARM_2:
      000000                        236 	.ds 1
      000001                        237 _iic_single_byte_read_PARM_3:
      000001                        238 	.ds 3
      000004                        239 _iic_single_byte_write_PARM_2:
      000004                        240 	.ds 1
      000005                        241 _iic_single_byte_write_PARM_3:
      000005                        242 	.ds 1
                                    243 ;--------------------------------------------------------
                                    244 ; overlayable items in internal ram 
                                    245 ;--------------------------------------------------------
                                    246 	.area	OSEG    (OVR,DATA)
                                    247 	.area	OSEG    (OVR,DATA)
                                    248 ;--------------------------------------------------------
                                    249 ; indirectly addressable internal ram data
                                    250 ;--------------------------------------------------------
                                    251 	.area ISEG    (DATA)
                                    252 ;--------------------------------------------------------
                                    253 ; absolute internal ram data
                                    254 ;--------------------------------------------------------
                                    255 	.area IABS    (ABS,DATA)
                                    256 	.area IABS    (ABS,DATA)
                                    257 ;--------------------------------------------------------
                                    258 ; bit data
                                    259 ;--------------------------------------------------------
                                    260 	.area BSEG    (BIT)
                                    261 ;--------------------------------------------------------
                                    262 ; paged external ram data
                                    263 ;--------------------------------------------------------
                                    264 	.area PSEG    (PAG,XDATA)
                                    265 ;--------------------------------------------------------
                                    266 ; external ram data
                                    267 ;--------------------------------------------------------
                                    268 	.area XSEG    (XDATA)
                                    269 ;--------------------------------------------------------
                                    270 ; absolute external ram data
                                    271 ;--------------------------------------------------------
                                    272 	.area XABS    (ABS,XDATA)
                                    273 ;--------------------------------------------------------
                                    274 ; external initialized ram data
                                    275 ;--------------------------------------------------------
                                    276 	.area XISEG   (XDATA)
                                    277 	.area HOME    (CODE)
                                    278 	.area GSINIT0 (CODE)
                                    279 	.area GSINIT1 (CODE)
                                    280 	.area GSINIT2 (CODE)
                                    281 	.area GSINIT3 (CODE)
                                    282 	.area GSINIT4 (CODE)
                                    283 	.area GSINIT5 (CODE)
                                    284 	.area GSINIT  (CODE)
                                    285 	.area GSFINAL (CODE)
                                    286 	.area CSEG    (CODE)
                                    287 ;--------------------------------------------------------
                                    288 ; global & static initialisations
                                    289 ;--------------------------------------------------------
                                    290 	.area HOME    (CODE)
                                    291 	.area GSINIT  (CODE)
                                    292 	.area GSFINAL (CODE)
                                    293 	.area GSINIT  (CODE)
                                    294 ;--------------------------------------------------------
                                    295 ; Home
                                    296 ;--------------------------------------------------------
                                    297 	.area HOME    (CODE)
                                    298 	.area HOME    (CODE)
                                    299 ;--------------------------------------------------------
                                    300 ; code
                                    301 ;--------------------------------------------------------
                                    302 	.area CSEG    (CODE)
                                    303 ;------------------------------------------------------------
                                    304 ;Allocation info for local variables in function 'iic_start'
                                    305 ;------------------------------------------------------------
                                    306 ;	iic.c:6: void iic_start(void)
                                    307 ;	-----------------------------------------
                                    308 ;	 function iic_start
                                    309 ;	-----------------------------------------
      000000                        310 _iic_start:
                           000007   311 	ar7 = 0x07
                           000006   312 	ar6 = 0x06
                           000005   313 	ar5 = 0x05
                           000004   314 	ar4 = 0x04
                           000003   315 	ar3 = 0x03
                           000002   316 	ar2 = 0x02
                           000001   317 	ar1 = 0x01
                           000000   318 	ar0 = 0x00
                                    319 ;	iic.c:8: IIC_SCL = 0;
                                    320 ;	assignBit
      000000 C2 97            [12]  321 	clr	_P1_7
                                    322 ;	iic.c:9: __nop(); __nop();
      000002 00               [12]  323 	nop	
      000003 00               [12]  324 	nop	
                                    325 ;	iic.c:10: IIC_SDA = 1;
                                    326 ;	assignBit
      000004 D2 96            [12]  327 	setb	_P1_6
                                    328 ;	iic.c:11: IIC_SCL = 1;
                                    329 ;	assignBit
      000006 D2 97            [12]  330 	setb	_P1_7
                                    331 ;	iic.c:12: __nop(); __nop();
      000008 00               [12]  332 	nop	
      000009 00               [12]  333 	nop	
                                    334 ;	iic.c:13: IIC_SDA = 0;
                                    335 ;	assignBit
      00000A C2 96            [12]  336 	clr	_P1_6
                                    337 ;	iic.c:14: }
      00000C 22               [24]  338 	ret
                                    339 ;------------------------------------------------------------
                                    340 ;Allocation info for local variables in function 'iic_stop'
                                    341 ;------------------------------------------------------------
                                    342 ;	iic.c:19: void iic_stop(void)
                                    343 ;	-----------------------------------------
                                    344 ;	 function iic_stop
                                    345 ;	-----------------------------------------
      00000D                        346 _iic_stop:
                                    347 ;	iic.c:21: IIC_SCL = 0;
                                    348 ;	assignBit
      00000D C2 97            [12]  349 	clr	_P1_7
                                    350 ;	iic.c:22: __nop(); __nop();
      00000F 00               [12]  351 	nop	
      000010 00               [12]  352 	nop	
                                    353 ;	iic.c:23: IIC_SDA = 0;
                                    354 ;	assignBit
      000011 C2 96            [12]  355 	clr	_P1_6
                                    356 ;	iic.c:24: IIC_SCL = 1;
                                    357 ;	assignBit
      000013 D2 97            [12]  358 	setb	_P1_7
                                    359 ;	iic.c:25: __nop(); __nop();
      000015 00               [12]  360 	nop	
      000016 00               [12]  361 	nop	
                                    362 ;	iic.c:26: IIC_SDA = 1;
                                    363 ;	assignBit
      000017 D2 96            [12]  364 	setb	_P1_6
                                    365 ;	iic.c:27: }
      000019 22               [24]  366 	ret
                                    367 ;------------------------------------------------------------
                                    368 ;Allocation info for local variables in function 'iic_ack'
                                    369 ;------------------------------------------------------------
                                    370 ;	iic.c:29: void iic_ack(void)
                                    371 ;	-----------------------------------------
                                    372 ;	 function iic_ack
                                    373 ;	-----------------------------------------
      00001A                        374 _iic_ack:
                                    375 ;	iic.c:31: IIC_SCL = 0;
                                    376 ;	assignBit
      00001A C2 97            [12]  377 	clr	_P1_7
                                    378 ;	iic.c:32: IIC_SDA = 0;
                                    379 ;	assignBit
      00001C C2 96            [12]  380 	clr	_P1_6
                                    381 ;	iic.c:33: __nop(); __nop();
      00001E 00               [12]  382 	nop	
      00001F 00               [12]  383 	nop	
                                    384 ;	iic.c:34: IIC_SCL = 1;
                                    385 ;	assignBit
      000020 D2 97            [12]  386 	setb	_P1_7
                                    387 ;	iic.c:35: }
      000022 22               [24]  388 	ret
                                    389 ;------------------------------------------------------------
                                    390 ;Allocation info for local variables in function 'iic_nack'
                                    391 ;------------------------------------------------------------
                                    392 ;	iic.c:37: void iic_nack(void) {
                                    393 ;	-----------------------------------------
                                    394 ;	 function iic_nack
                                    395 ;	-----------------------------------------
      000023                        396 _iic_nack:
                                    397 ;	iic.c:38: IIC_SCL = 0;
                                    398 ;	assignBit
      000023 C2 97            [12]  399 	clr	_P1_7
                                    400 ;	iic.c:39: __nop(); __nop();
      000025 00               [12]  401 	nop	
      000026 00               [12]  402 	nop	
                                    403 ;	iic.c:40: IIC_SDA = 1;
                                    404 ;	assignBit
      000027 D2 96            [12]  405 	setb	_P1_6
                                    406 ;	iic.c:41: __nop(); __nop();
      000029 00               [12]  407 	nop	
      00002A 00               [12]  408 	nop	
                                    409 ;	iic.c:42: IIC_SCL = 1;
                                    410 ;	assignBit
      00002B D2 97            [12]  411 	setb	_P1_7
                                    412 ;	iic.c:43: }
      00002D 22               [24]  413 	ret
                                    414 ;------------------------------------------------------------
                                    415 ;Allocation info for local variables in function 'iic_read_ack'
                                    416 ;------------------------------------------------------------
                                    417 ;	iic.c:45: uint8_t iic_read_ack(void)
                                    418 ;	-----------------------------------------
                                    419 ;	 function iic_read_ack
                                    420 ;	-----------------------------------------
      00002E                        421 _iic_read_ack:
                                    422 ;	iic.c:47: IIC_SCL = 0;
                                    423 ;	assignBit
      00002E C2 97            [12]  424 	clr	_P1_7
                                    425 ;	iic.c:48: IIC_SDA = 1;
                                    426 ;	assignBit
      000030 D2 96            [12]  427 	setb	_P1_6
                                    428 ;	iic.c:49: __nop(); __nop();
      000032 00               [12]  429 	nop	
      000033 00               [12]  430 	nop	
                                    431 ;	iic.c:50: IIC_SCL = 1;
                                    432 ;	assignBit
      000034 D2 97            [12]  433 	setb	_P1_7
                                    434 ;	iic.c:51: __nop(); __nop();
      000036 00               [12]  435 	nop	
      000037 00               [12]  436 	nop	
                                    437 ;	iic.c:52: return IIC_SDA;
      000038 A2 96            [12]  438 	mov	c,_P1_6
      00003A E4               [12]  439 	clr	a
      00003B 33               [12]  440 	rlc	a
      00003C F5 82            [12]  441 	mov	dpl,a
                                    442 ;	iic.c:53: }
      00003E 22               [24]  443 	ret
                                    444 ;------------------------------------------------------------
                                    445 ;Allocation info for local variables in function 'iic_send_byte'
                                    446 ;------------------------------------------------------------
                                    447 ;data                      Allocated to registers r7 
                                    448 ;i                         Allocated to registers r6 
                                    449 ;------------------------------------------------------------
                                    450 ;	iic.c:55: void iic_send_byte(uint8_t data)
                                    451 ;	-----------------------------------------
                                    452 ;	 function iic_send_byte
                                    453 ;	-----------------------------------------
      00003F                        454 _iic_send_byte:
      00003F AF 82            [24]  455 	mov	r7,dpl
                                    456 ;	iic.c:58: for(i=0; i<8; i++)
      000041 7E 00            [12]  457 	mov	r6,#0x00
      000043                        458 00102$:
                                    459 ;	iic.c:60: IIC_SCL = 0;
                                    460 ;	assignBit
      000043 C2 97            [12]  461 	clr	_P1_7
                                    462 ;	iic.c:61: __nop(); __nop();
      000045 00               [12]  463 	nop	
      000046 00               [12]  464 	nop	
                                    465 ;	iic.c:62: IIC_SDA = (data << i) & 0x80;
      000047 8F 04            [24]  466 	mov	ar4,r7
      000049 7D 00            [12]  467 	mov	r5,#0x00
      00004B 8E F0            [24]  468 	mov	b,r6
      00004D 05 F0            [12]  469 	inc	b
      00004F 80 06            [24]  470 	sjmp	00112$
      000051                        471 00111$:
      000051 EC               [12]  472 	mov	a,r4
      000052 2C               [12]  473 	add	a,r4
      000053 FC               [12]  474 	mov	r4,a
      000054 ED               [12]  475 	mov	a,r5
      000055 33               [12]  476 	rlc	a
      000056 FD               [12]  477 	mov	r5,a
      000057                        478 00112$:
      000057 D5 F0 F7         [24]  479 	djnz	b,00111$
      00005A EC               [12]  480 	mov	a,r4
      00005B 23               [12]  481 	rl	a
      00005C 54 01            [12]  482 	anl	a,#0x01
      00005E FD               [12]  483 	mov	r5,a
      00005F 24 FF            [12]  484 	add	a,#0xff
      000061 92 96            [24]  485 	mov	_P1_6,c
                                    486 ;	iic.c:63: __nop(); __nop();
      000063 00               [12]  487 	nop	
      000064 00               [12]  488 	nop	
                                    489 ;	iic.c:64: IIC_SCL = 1;
                                    490 ;	assignBit
      000065 D2 97            [12]  491 	setb	_P1_7
                                    492 ;	iic.c:58: for(i=0; i<8; i++)
      000067 0E               [12]  493 	inc	r6
      000068 BE 08 00         [24]  494 	cjne	r6,#0x08,00113$
      00006B                        495 00113$:
      00006B 40 D6            [24]  496 	jc	00102$
                                    497 ;	iic.c:66: }
      00006D 22               [24]  498 	ret
                                    499 ;------------------------------------------------------------
                                    500 ;Allocation info for local variables in function 'iic_read_byte'
                                    501 ;------------------------------------------------------------
                                    502 ;i                         Allocated to registers r6 
                                    503 ;data                      Allocated to registers r5 
                                    504 ;------------------------------------------------------------
                                    505 ;	iic.c:68: uint8_t iic_read_byte(void)
                                    506 ;	-----------------------------------------
                                    507 ;	 function iic_read_byte
                                    508 ;	-----------------------------------------
      00006E                        509 _iic_read_byte:
                                    510 ;	iic.c:71: uint8_t data = 0x00;
      00006E 7F 00            [12]  511 	mov	r7,#0x00
                                    512 ;	iic.c:72: for(i=0; i<8; i++)
      000070 7E 00            [12]  513 	mov	r6,#0x00
      000072                        514 00102$:
                                    515 ;	iic.c:74: IIC_SCL = 0;
                                    516 ;	assignBit
      000072 C2 97            [12]  517 	clr	_P1_7
                                    518 ;	iic.c:76: IIC_SDA = 1;
                                    519 ;	assignBit
      000074 D2 96            [12]  520 	setb	_P1_6
                                    521 ;	iic.c:77: __nop(); __nop();
      000076 00               [12]  522 	nop	
      000077 00               [12]  523 	nop	
                                    524 ;	iic.c:78: data <<= 1;
      000078 8F 05            [24]  525 	mov	ar5,r7
      00007A ED               [12]  526 	mov	a,r5
      00007B 2D               [12]  527 	add	a,r5
      00007C FD               [12]  528 	mov	r5,a
                                    529 ;	iic.c:79: IIC_SCL = 1;
                                    530 ;	assignBit
      00007D D2 97            [12]  531 	setb	_P1_7
                                    532 ;	iic.c:80: __nop(); __nop();
      00007F 00               [12]  533 	nop	
      000080 00               [12]  534 	nop	
                                    535 ;	iic.c:81: data |= IIC_SDA;
      000081 A2 96            [12]  536 	mov	c,_P1_6
      000083 E4               [12]  537 	clr	a
      000084 33               [12]  538 	rlc	a
      000085 FC               [12]  539 	mov	r4,a
      000086 4D               [12]  540 	orl	a,r5
      000087 FF               [12]  541 	mov	r7,a
                                    542 ;	iic.c:72: for(i=0; i<8; i++)
      000088 0E               [12]  543 	inc	r6
      000089 BE 08 00         [24]  544 	cjne	r6,#0x08,00117$
      00008C                        545 00117$:
      00008C 40 E4            [24]  546 	jc	00102$
                                    547 ;	iic.c:83: return data;
      00008E 8F 82            [24]  548 	mov	dpl,r7
                                    549 ;	iic.c:84: }
      000090 22               [24]  550 	ret
                                    551 ;------------------------------------------------------------
                                    552 ;Allocation info for local variables in function 'iic_single_byte_read'
                                    553 ;------------------------------------------------------------
                                    554 ;registerAddress           Allocated with name '_iic_single_byte_read_PARM_2'
                                    555 ;data                      Allocated with name '_iic_single_byte_read_PARM_3'
                                    556 ;deviceAddress             Allocated to registers r7 
                                    557 ;------------------------------------------------------------
                                    558 ;	iic.c:86: uint8_t iic_single_byte_read(uint8_t deviceAddress, uint8_t registerAddress, uint8_t *data)
                                    559 ;	-----------------------------------------
                                    560 ;	 function iic_single_byte_read
                                    561 ;	-----------------------------------------
      000091                        562 _iic_single_byte_read:
      000091 AF 82            [24]  563 	mov	r7,dpl
                                    564 ;	iic.c:88: iic_start();
      000093 C0 07            [24]  565 	push	ar7
      000095 12r00r00         [24]  566 	lcall	_iic_start
      000098 D0 07            [24]  567 	pop	ar7
                                    568 ;	iic.c:89: iic_send_byte(deviceAddress);
      00009A 8F 82            [24]  569 	mov	dpl,r7
      00009C C0 07            [24]  570 	push	ar7
      00009E 12r00r3F         [24]  571 	lcall	_iic_send_byte
                                    572 ;	iic.c:90: if(iic_read_ack() == IIC_NACK)
      0000A1 12r00r2E         [24]  573 	lcall	_iic_read_ack
      0000A4 AE 82            [24]  574 	mov	r6,dpl
      0000A6 D0 07            [24]  575 	pop	ar7
      0000A8 BE 01 04         [24]  576 	cjne	r6,#0x01,00102$
                                    577 ;	iic.c:92: return 1;
      0000AB 75 82 01         [24]  578 	mov	dpl,#0x01
      0000AE 22               [24]  579 	ret
      0000AF                        580 00102$:
                                    581 ;	iic.c:94: iic_send_byte(registerAddress);
      0000AF 85*00 82         [24]  582 	mov	dpl,_iic_single_byte_read_PARM_2
      0000B2 C0 07            [24]  583 	push	ar7
      0000B4 12r00r3F         [24]  584 	lcall	_iic_send_byte
                                    585 ;	iic.c:95: if(iic_read_ack() == IIC_NACK)
      0000B7 12r00r2E         [24]  586 	lcall	_iic_read_ack
      0000BA AE 82            [24]  587 	mov	r6,dpl
      0000BC D0 07            [24]  588 	pop	ar7
      0000BE BE 01 04         [24]  589 	cjne	r6,#0x01,00104$
                                    590 ;	iic.c:97: return 2;
      0000C1 75 82 02         [24]  591 	mov	dpl,#0x02
      0000C4 22               [24]  592 	ret
      0000C5                        593 00104$:
                                    594 ;	iic.c:99: iic_start();
      0000C5 C0 07            [24]  595 	push	ar7
      0000C7 12r00r00         [24]  596 	lcall	_iic_start
      0000CA D0 07            [24]  597 	pop	ar7
                                    598 ;	iic.c:100: iic_send_byte(deviceAddress | 0x01);
      0000CC 43 07 01         [24]  599 	orl	ar7,#0x01
      0000CF 8F 82            [24]  600 	mov	dpl,r7
      0000D1 12r00r3F         [24]  601 	lcall	_iic_send_byte
                                    602 ;	iic.c:101: if(iic_read_ack() == IIC_NACK)
      0000D4 12r00r2E         [24]  603 	lcall	_iic_read_ack
      0000D7 AF 82            [24]  604 	mov	r7,dpl
      0000D9 BF 01 04         [24]  605 	cjne	r7,#0x01,00106$
                                    606 ;	iic.c:103: return 3;
      0000DC 75 82 03         [24]  607 	mov	dpl,#0x03
      0000DF 22               [24]  608 	ret
      0000E0                        609 00106$:
                                    610 ;	iic.c:105: *data = iic_read_byte();
      0000E0 AD*01            [24]  611 	mov	r5,_iic_single_byte_read_PARM_3
      0000E2 AE*02            [24]  612 	mov	r6,(_iic_single_byte_read_PARM_3 + 1)
      0000E4 AF*03            [24]  613 	mov	r7,(_iic_single_byte_read_PARM_3 + 2)
      0000E6 C0 07            [24]  614 	push	ar7
      0000E8 C0 06            [24]  615 	push	ar6
      0000EA C0 05            [24]  616 	push	ar5
      0000EC 12r00r6E         [24]  617 	lcall	_iic_read_byte
      0000EF AC 82            [24]  618 	mov	r4,dpl
      0000F1 D0 05            [24]  619 	pop	ar5
      0000F3 D0 06            [24]  620 	pop	ar6
      0000F5 D0 07            [24]  621 	pop	ar7
      0000F7 8D 82            [24]  622 	mov	dpl,r5
      0000F9 8E 83            [24]  623 	mov	dph,r6
      0000FB 8F F0            [24]  624 	mov	b,r7
      0000FD EC               [12]  625 	mov	a,r4
      0000FE 12r00r00         [24]  626 	lcall	__gptrput
                                    627 ;	iic.c:106: iic_nack();
      000101 12r00r23         [24]  628 	lcall	_iic_nack
                                    629 ;	iic.c:107: iic_stop();
      000104 12r00r0D         [24]  630 	lcall	_iic_stop
                                    631 ;	iic.c:108: return 0;
      000107 75 82 00         [24]  632 	mov	dpl,#0x00
                                    633 ;	iic.c:109: }
      00010A 22               [24]  634 	ret
                                    635 ;------------------------------------------------------------
                                    636 ;Allocation info for local variables in function 'iic_single_byte_write'
                                    637 ;------------------------------------------------------------
                                    638 ;registerAddress           Allocated with name '_iic_single_byte_write_PARM_2'
                                    639 ;data                      Allocated with name '_iic_single_byte_write_PARM_3'
                                    640 ;deviceAddress             Allocated to registers r7 
                                    641 ;------------------------------------------------------------
                                    642 ;	iic.c:111: uint8_t iic_single_byte_write(uint8_t deviceAddress, uint8_t registerAddress, uint8_t data)
                                    643 ;	-----------------------------------------
                                    644 ;	 function iic_single_byte_write
                                    645 ;	-----------------------------------------
      00010B                        646 _iic_single_byte_write:
      00010B AF 82            [24]  647 	mov	r7,dpl
                                    648 ;	iic.c:113: iic_start();
      00010D C0 07            [24]  649 	push	ar7
      00010F 12r00r00         [24]  650 	lcall	_iic_start
      000112 D0 07            [24]  651 	pop	ar7
                                    652 ;	iic.c:114: iic_send_byte(deviceAddress);
      000114 8F 82            [24]  653 	mov	dpl,r7
      000116 12r00r3F         [24]  654 	lcall	_iic_send_byte
                                    655 ;	iic.c:115: if(iic_read_ack() == IIC_NACK)
      000119 12r00r2E         [24]  656 	lcall	_iic_read_ack
      00011C AF 82            [24]  657 	mov	r7,dpl
      00011E BF 01 04         [24]  658 	cjne	r7,#0x01,00102$
                                    659 ;	iic.c:117: return 1;
      000121 75 82 01         [24]  660 	mov	dpl,#0x01
      000124 22               [24]  661 	ret
      000125                        662 00102$:
                                    663 ;	iic.c:119: iic_send_byte(registerAddress);
      000125 85*04 82         [24]  664 	mov	dpl,_iic_single_byte_write_PARM_2
      000128 12r00r3F         [24]  665 	lcall	_iic_send_byte
                                    666 ;	iic.c:120: if(iic_read_ack() == IIC_NACK)
      00012B 12r00r2E         [24]  667 	lcall	_iic_read_ack
      00012E AF 82            [24]  668 	mov	r7,dpl
      000130 BF 01 04         [24]  669 	cjne	r7,#0x01,00104$
                                    670 ;	iic.c:122: return 2;
      000133 75 82 02         [24]  671 	mov	dpl,#0x02
      000136 22               [24]  672 	ret
      000137                        673 00104$:
                                    674 ;	iic.c:124: iic_send_byte(data);
      000137 85*05 82         [24]  675 	mov	dpl,_iic_single_byte_write_PARM_3
      00013A 12r00r3F         [24]  676 	lcall	_iic_send_byte
                                    677 ;	iic.c:125: if(iic_read_ack() == IIC_NACK)
      00013D 12r00r2E         [24]  678 	lcall	_iic_read_ack
      000140 AF 82            [24]  679 	mov	r7,dpl
      000142 BF 01 04         [24]  680 	cjne	r7,#0x01,00106$
                                    681 ;	iic.c:127: return 3;
      000145 75 82 03         [24]  682 	mov	dpl,#0x03
      000148 22               [24]  683 	ret
      000149                        684 00106$:
                                    685 ;	iic.c:129: iic_stop();
      000149 12r00r0D         [24]  686 	lcall	_iic_stop
                                    687 ;	iic.c:130: return 0;
      00014C 75 82 00         [24]  688 	mov	dpl,#0x00
                                    689 ;	iic.c:131: }
      00014F 22               [24]  690 	ret
                                    691 	.area CSEG    (CODE)
                                    692 	.area CONST   (CODE)
                                    693 	.area XINIT   (CODE)
                                    694 	.area CABS    (ABS,CODE)
